{"version":3,"sources":["Components/trTable/fontAwesome/trash.jsx","Components/trTable/fontAwesome/edit.jsx","Components/trTable/Tr.jsx","Components/Table/Table.jsx","App.js","serviceWorker.js","index.js"],"names":["Trash","className","Component","Edit","Tr","prop","this","props","id","name","lastName","phone","email","address","birthday","details","Table","state","trTable","action","search","chengeHandler","event","target","value","setState","console","log","newTr","filter","item","toLowerCase","startsWith","onChange","map","key","App","React","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"0TAQeA,E,uKAJX,OAAO,uBAAGC,UAAU,oB,GAFJC,aCMLC,E,uKAJX,OAAO,uBAAGF,UAAU,mB,GAFLC,aCuBJE,E,uKAnBD,IACCC,EAAQC,KAAKC,MAAbF,KACP,OACI,4BACI,4BAAKA,EAAKG,IACV,4BAAKH,EAAKI,MACV,4BAAKJ,EAAKK,UACV,4BAAKL,EAAKM,OACV,4BAAKN,EAAKO,OACV,4BAAKP,EAAKQ,SACV,4BAAKR,EAAKS,UACV,4BAAKT,EAAKU,SACV,4BAAI,4BAAQd,UAAU,uBAAsB,kBAAC,EAAD,OAC5C,4BAAQA,UAAU,wBAAuB,kBAAC,EAAD,a,GAdxCC,aCyDFc,G,kNAzDXC,MAAM,CACFC,QAAQ,CACJ,CAACV,GAAG,EAAGC,KAAK,MAAOC,SAAS,WAAYC,MAAM,cAAeC,MAAM,gBAAiBC,QAAQ,UAAWC,SAAS,OAAQC,QAAQ,IAAKI,OAAO,IAC5I,CAACX,GAAG,EAAGC,KAAK,WAAYC,SAAS,WAAYC,MAAM,cAAeC,MAAM,qBAAsBC,QAAQ,OAAQC,SAAS,OAAQC,QAAQ,IAAKI,OAAO,IACnJ,CAACX,GAAG,EAAGC,KAAK,OAAQC,SAAS,SAAUC,MAAM,cAAeC,MAAM,iBAAkBC,QAAQ,SAAUC,SAAS,OAAQC,QAAQ,IAAKI,OAAO,IAC3I,CAACX,GAAG,EAAGC,KAAK,QAASC,SAAS,UAAWC,MAAM,cAAeC,MAAM,oBAAqBC,QAAQ,UAAWC,SAAS,OAAQC,QAAQ,IAAKI,OAAO,IACjJ,CAACX,GAAG,EAAGC,KAAK,QAASC,SAAS,YAAaC,MAAM,cAAeC,MAAM,kBAAmBC,QAAQ,SAAUC,SAAS,OAAQC,QAAQ,IAAKI,OAAO,IAChJ,CAACX,GAAG,EAAGC,KAAK,OAAQC,SAAS,UAAWC,MAAM,cAAeC,MAAM,oBAAqBC,QAAQ,OAAQC,SAAS,OAAQC,QAAQ,IAAKI,OAAO,IAC7I,CAACX,GAAG,EAAGC,KAAK,UAAWC,SAAS,SAAUC,MAAM,cAAeC,MAAM,mBAAoBC,QAAQ,QAASC,SAAS,OAAQC,QAAQ,IAAKI,OAAO,IAC/I,CAACX,GAAG,EAAGC,KAAK,SAAUC,SAAS,WAAYC,MAAM,cAAeC,MAAM,mBAAoBC,QAAQ,SAAUC,SAAS,OAAQC,QAAQ,IAAKI,OAAO,KAErJC,OAAO,I,EAEXC,cAAe,SAACC,GAAS,IAAD,EACEA,EAAMC,OAArBd,EADa,EACbA,KAAMe,EADO,EACPA,MACb,EAAKC,SAAL,eAAgBhB,EAAOe,IACvBE,QAAQC,IAAIH,I,uDAEN,IAAD,EACqBlB,KAAKW,MAAxBC,EADF,EACEA,QAASE,EADX,EACWA,OACZQ,EAAQV,EAAQW,QAAO,SAAAC,GAAI,OAC3BA,EAAKrB,KAAKsB,cAAcC,WAAWZ,EAAOW,gBAC1CD,EAAKnB,MAAMqB,WAAWZ,MAG1B,OACI,yBAAKnB,UAAU,kBACX,yBAAKA,UAAU,sCACX,0CACA,2BAAOA,UAAU,8BAA8BQ,KAAM,SAAUwB,SAAU3B,KAAKe,cAAeG,MAAOJ,IACpG,uBAAGnB,UAAU,kBAEjB,2BAAOA,UAAU,0CACb,2BAAOA,UAAU,cACb,4BACI,iCACA,oCACA,yCACA,qCACA,qCACA,uCACA,wCACA,uCACA,wCAGR,+BACK2B,EAAMM,KAAI,SAACJ,GAAD,OACP,kBAAC,EAAD,CAAIK,IAAKL,EAAKtB,GAAIH,KAAMyB,c,GAlDhC5B,cCWLkC,E,uKARX,OACE,yBAAKnC,UAAU,OACb,kBAAC,EAAD,W,GAJUoC,IAAMnC,WCQJoC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL7B,QAAQ6B,MAAMA,EAAMC,c","file":"static/js/main.698c1f9c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Trash extends Component {\r\n  render() {\r\n    return <i className='fa fa-trash'/>;\r\n  }\r\n}\r\n\r\nexport default Trash;","import React, { Component } from \"react\";\r\n\r\nclass Edit extends Component {\r\n  render() {\r\n    return <i className='fa fa-edit'/>;\r\n  }\r\n}\r\n\r\nexport default Edit;","import React, { Component } from 'react';\r\nimport Trash from './fontAwesome/trash';\r\nimport Edit from './fontAwesome/edit';\r\n\r\n\r\nclass Tr extends Component {\r\n    render() {\r\n        const {prop} = this.props;\r\n        return (\r\n            <tr>\r\n                <td>{prop.id}</td>\r\n                <td>{prop.name}</td>\r\n                <td>{prop.lastName}</td>\r\n                <td>{prop.phone}</td>\r\n                <td>{prop.email}</td>\r\n                <td>{prop.address}</td>\r\n                <td>{prop.birthday}</td>\r\n                <td>{prop.details}</td>\r\n                <td><button className=\"btn btn-danger mx-1\"><Trash /></button>\r\n                <button className=\"btn btn-primary mx-1\"><Edit /></button></td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tr;","import React, { Component } from 'react';\r\nimport Tr from '../trTable/Tr'\r\nimport '../Table/table.css'\r\nclass Table extends Component {\r\n\r\n    state={\r\n        trTable:[\r\n            {id:1, name:\"ali\", lastName:\"komijani\", phone:\"09014356218\", email:\"ali@gmail.com\", address:\"komijan\", birthday:\"1375\", details:\"-\", action:\"\"},\r\n            {id:2, name:\"mohammad\", lastName:\"khorrami\", phone:\"09114356218\", email:\"mohammad@gmail.com\", address:\"arak\", birthday:\"1346\", details:\"-\", action:\"\"},\r\n            {id:3, name:\"reza\", lastName:\"hatami\", phone:\"09124356218\", email:\"reza@gmail.com\", address:\"tehran\", birthday:\"1345\", details:\"-\", action:\"\"},\r\n            {id:4, name:\"mahdi\", lastName:\"sadeghi\", phone:\"09134356218\", email:\"sadeghi@gmail.com\", address:\"esfahan\", birthday:\"1388\", details:\"-\", action:\"\"},\r\n            {id:5, name:\"hasan\", lastName:\"mohammadi\", phone:\"09224356218\", email:\"hasan@gmail.com\", address:\"kerman\", birthday:\"1366\", details:\"-\", action:\"\"},\r\n            {id:6, name:\"amir\", lastName:\"sharifi\", phone:\"09354356218\", email:\"sharifi@gmail.com\", address:\"azna\", birthday:\"1359\", details:\"-\", action:\"\"},\r\n            {id:7, name:\"amirali\", lastName:\"ansari\", phone:\"09356356218\", email:\"ansari@gmail.com\", address:\"karaj\", birthday:\"1374\", details:\"-\", action:\"\"},\r\n            {id:8, name:\"mehran\", lastName:\"mansoori\", phone:\"09164356218\", email:\"mehran@gmail.com\", address:\"shiraz\", birthday:\"1375\", details:\"-\", action:\"\"},\r\n        ],\r\n        search:\"\",\r\n    };\r\n    chengeHandler= (event)=>{\r\n        const {name, value} = event.target;\r\n        this.setState({[name]: value});\r\n        console.log(value);\r\n    };\r\n    render() {\r\n        const {trTable, search} = this.state;\r\n        let newTr = trTable.filter(item=> (\r\n            item.name.toLowerCase().startsWith(search.toLowerCase()) ||\r\n            item.phone.startsWith(search)\r\n        ))\r\n\r\n        return (\r\n            <div className=\"tableContainer\">\r\n                <div className=\"col-6 bg-info rounded-lg py-2 my-2\">\r\n                    <label>search:</label>\r\n                    <input className=\"rounded border-0 mx-2 input\" name={'search'} onChange={this.chengeHandler} value={search}/>\r\n                    <i className='fa fa-search'/>\r\n                </div>\r\n                <table className=\"table table-striped table-hover border\">\r\n                    <thead className=\"thead-dark\">\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>name</th>\r\n                            <th>last name</th>\r\n                            <th>phone</th>\r\n                            <th>email</th>\r\n                            <th>address</th>\r\n                            <th>birthday</th>\r\n                            <th>details</th>\r\n                            <th>action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {newTr.map((item) =>(\r\n                            <Tr key={item.id} prop={item}/>\r\n                        ))}\r\n                    </tbody>\r\n                </table> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Table;","import React from 'react';\nimport './App.css';\nimport Table from './Components/Table/Table';\n\nclass App extends React.Component {\n  render(){\n    return (\n      <div className=\"App\">\n        <Table/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}